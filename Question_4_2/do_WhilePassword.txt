//The program was in infinite loop because of the expression used to validate the loop
//The following code is modified to at least satisfy the needs that you want the program to do

import java.util.*; 
import javax.swing.*;
import java.util.regex.*;

public class do_whilePassword {
        //function created to validate the new password entered by the user
        public static boolean passChecked(String userInput){
            //here is where we set the pattern that the new password must follow
            String regex = "^[A-Za-z_]\\w{1,20}$"; 

            //compiling of the regex 
            Pattern p = Pattern.compile(regex);
            
            //if the user does not enter any password
            if(userInput == null){
                return false;
            }
            
            // Pattern class contains matcher() method
            // to find matching between given password
            // and regular expression mentioned on line 10
            Matcher m = p.matcher(userInput);
            //returns the password if it matches the regular expression
            return m.matches();
        } 
    public static void main(String[] args) {
        //declarations of variables used within the main function
        String choice = "";
        String choice1 = "";
        String choice2 = "";
        String choice3 = "";
        String newPassword= "";
        String password = "John"; 
        int count = 0; 

        //do while loop used to force the user into entering the correct password
        do{
            //counter used to keep track of the number of times a user enters a password
            count = count + 1;
            //is statement used to only prompt the user once
            if(count == 1){
                choice = JOptionPane.showInputDialog("Please enter password");
            }
            
            //this statement checks if the user has entered the correct password
            //and only gives the user to enter an incorrect password 3 times
            if (password.equals(choice) == false && count < 3){
                choice = JOptionPane.showInputDialog("Password is incorrect please enter password");   
            }

            //else if the entered password was entered 3 times 
            //this statement is executed next where a user will be asked for a new password 
            else if (count == 3){

                #console used to save and track changes made by through the input panel 
                System.out.println("You have entered a wrong password 3 times, your password is " + password);
                choice2 = JOptionPane.showInputDialog("You have entered a wrong password 3 times, your password was " 
                                                        + password + ". Please enter a new password");
                newPassword = choice2;

                //here the password entered is checked using the function created on line 8
                if(passChecked(newPassword) == false){
                    
                    //this loop is created to force the user to enter a new password
                    //that satisfies the condition mentioned on line 10
                    do{
                        System.out.println(newPassword + " does not meet requirements try again.");
                        choice3 = JOptionPane.showInputDialog("Password does not meet Requirements please try again");
                        newPassword = choice3; 
                    }while(passChecked(newPassword) == false);
                }
                break;
            }
        #this expression is used to keep the user inside the loop as long as the wrong password is being entered
        }while(password.equals(choice1) == false); 

        //the do while loop exits to this statement should the correct password be entered
        if(choice1.equals(password)){
            JOptionPane.showMessageDialog(null, "Access Granted");
        }
        //else this statement must be entered to tell the user that they have successfully changed their password
        else{
            JOptionPane.showMessageDialog(null, "Password change was successful");
            password = newPassword;
        }  
    }
}